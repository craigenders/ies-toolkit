burn = 5000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
# compute change score from imputed data
for (i in 1:length(implist)) {
implist[[i]]$change <- implist[[i]]$mathpost -  implist[[i]]$mathpre
}
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$imputation))
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$imputation))
# FCS Imputation for Paired-Samples Test
library(fdir)
library(rblimp)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
mathachievement <- read.table("mathachievement.dat", na.strings = 999)
names(mathachievement) <- c("id", "condition", "male", "frlunch", "atrisk", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
##################################################
# fcs imputation (ex12.imp)
##################################################
mymodel <- rblimp_fcs(
data = mathachievement,
ordinal = 'frlunch efficacy',
fixed = 'mathpre',
variables = 'mathpost mathpre frlunch stanread efficacy',
seed = 90291,
burn = 5000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
# compute change score from imputed data
for (i in 1:length(implist)) {
implist[[i]]$change <- implist[[i]]$mathpost -  implist[[i]]$mathpre
}
# analysis and pooling
fit <- with(implist, lm(change ~ 1))
estimates <- testEstimates(fit, extra.pars = T, df.com = 249)
estimates
confint(estimates) # confidence intervals
# FCS Imputation for Paired-Samples Test
library(fdir)
library(rblimp)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
mathachievement <- read.table('mathachievement.dat', na.strings = 999)
names(mathachievement) <- c('id', 'condition', 'male', 'frlunch', 'atrisk', 'stanread', 'efficacy', 'anxiety', 'mathpre', 'mathpost')
##################################################
# fcs imputation (ex12.imp)
##################################################
mymodel <- rblimp_fcs(
data = mathachievement,
ordinal = 'frlunch efficacy',
fixed = 'mathpre',
variables = 'mathpost mathpre frlunch stanread efficacy',
seed = 90291,
burn = 5000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
# compute change score from imputed data
for (i in 1:length(implist)) {
implist[[i]]$change <- implist[[i]]$mathpost -  implist[[i]]$mathpre
}
# analysis and pooling
fit <- with(implist, lm(change ~ 1))
# significance tests with barnard & rubin degrees of freedom
estimates <- testEstimates(fit, extra.pars = T, df.com = 249)
estimates
confint(estimates) # confidence intervals
# MCMC Linear Regression
library(fdir)
library(rblimp)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
behaviorachievement <- read.table('behaviorachievement.dat', na.strings = 999)
names(behaviorachievement) <- c('id','male','hispanic','riskgrp','atrisk','behsymp1','lrnprob1',
'read1','read2','read3','read9','read9grp','stanread7',
'math1','math2','math3','math9','math9grp','stanmath7')
##################################################
# fcs imputation (ex13.imp)
##################################################
mymodel <- rblimp_fcs(
data = behaviorachievement,
variables = 'read9 read1 lrnprob1 behsymp1 stanread7 read2',
seed = 90291,
burn = 2000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$imputation))
# MCMC Linear Regression
library(fdir)
library(rblimp)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
behaviorachievement <- read.table('behaviorachievement.dat', na.strings = 999)
names(behaviorachievement) <- c('id','male','hispanic','riskgrp','atrisk','behsymp1','lrnprob1',
'read1','read2','read3','read9','read9grp','stanread7',
'math1','math2','math3','math9','math9grp','stanmath7')
##################################################
# fcs imputation (ex13.imp)
##################################################
mymodel <- rblimp_fcs(
data = behaviorachievement,
variables = 'read9 read1 lrnprob1 behsymp1 stanread7 read2',
seed = 90291,
burn = 2000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
# analysis and pooling
fit <- with(implist, lm(read9 ~ read1 + lrnprob1 + behsymp1))
# significance tests with barnard & rubin degrees of freedom
estimates <- testEstimates(fit, extra.pars = T, df.com = 134)
estimates
confint(estimates) # confidence intervals
# pooled r-square
rsquare <- mean(unlist(lapply(implist, (function(x) summary(lm(read9 ~ read1 + lrnprob1 + behsymp1, data = x))$r.squared))))
rsquare
##################################################
# wald and likelihood ratio (omnibus) tests
##################################################
# wald test that all slopes = 0
null <- with(implist, lm(read9 ~ 1))
testModels(fit, null, df.com = 134, method = "D1")
# FCS for Regression With Multicategorical Predictors
library(fdir)
library(rblimp)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
behaviorachievement <- read.table('behaviorachievement.dat', na.strings = 999)
names(behaviorachievement) <- c('id','male','hispanic','riskgrp','atrisk','behsymp1','lrnprob1',
'read1','read2','read3','read9','read9grp','stanread7',
'math1','math2','math3','math9','math9grp','stanmath7')
##################################################
# fcs imputation (ex13.imp)
##################################################
mymodel <- rblimp_fcs(
data = behaviorachievement,
nominal = 'riskgrp',
variables = 'read9 read1 lrnprob1 behsymp1 riskgrp stanread7 read2',
seed = 90291,
burn = 2000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
# analysis and pooling
fit <- with(implist, lm(read9 ~ read1 + lrnprob1 + behsymp1 + factor(riskgrp)))
# significance tests with barnard & rubin degrees of freedom
estimates <- testEstimates(fit, extra.pars = T, df.com = 132)
estimates
confint(estimates) # confidence intervals
rsquare <- mean(unlist(lapply(implist, (function(x) summary(lm(read9 ~ read1 + lrnprob1 + behsymp1 + factor(riskgrp), data = x))$r.squared))))
rsquare
# wald test that all slopes = 0
null <- with(implist, lm(read9 ~ 1))
testModels(fit, null, df.com = 132, method = "D1")
# Two-Level Regression With Random Intercepts
library(fdir)
library(rblimp)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving2level <- read.table('problemsolving2level.dat')
names(problemsolving2level) <- c('school','student','condition','teachexp','eslpct','hispanic','male','frlunch',
'lowach','stanmath','efficacypre','efficacypst','psolvepre','psolvepst')
##################################################
# fcs imputation (ex15.imp)
##################################################
mymodel <- rblimp_fcs(
data = problemsolving2level,
clusterid = 'school',
ordinal = 'condition hispanic frlunch',
fixed = 'condition psolvepre',
variables = 'psolvepst psolvepre hispanic frlunch condition',
seed = 90291,
burn = 1000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
head(mymodel@imputations)
# mitml list
implist_latent <- as.mitml(mymodel@latent)
library(rockchalk)
# Two-Level Regression With Random Intercepts
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving2level <- read.table('problemsolving2level.dat')
names(problemsolving2level) <- c('school','student','condition','teachexp','eslpct','hispanic','male','frlunch',
'lowach','stanmath','efficacypre','efficacypst','psolvepre','psolvepst')
##################################################
# fcs imputation (ex15.imp)
##################################################
mymodel <- rblimp_fcs(
data = problemsolving2level,
clusterid = 'school',
ordinal = 'condition hispanic frlunch',
fixed = 'condition psolvepre',
variables = 'psolvepst psolvepre hispanic frlunch condition',
seed = 90291,
burn = 1000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
for (i in 1:length(implist)) {
implist[[i]] <- gmc(implist[[i]], c('psolvepre','hispanic','frlunch'), by = c('school'), FUN = mean, suffix = c('.meanj', '.cwc'), fulldataframe = TRUE)
# implist[[i]]$psolvepre.cwc <- implist[[i]]$psolvepre -  implist[[i]]$mathpre
}
head(implist[[1]])
# analysis and pooling
fit <- with(implist, lmer(psolvepst ~ psolvepre.cwc + hispanic.cwc + frlunch.cwc + psolvepre.meanj + hispanic.meanj + frlunch.meanj + condition + (1 | school), REML = T))
# significance tests
estimates <- testEstimates(fit, extra.pars = T)
estimates
# Two-Level Regression With Random Intercepts
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving2level <- read.table('problemsolving2level.dat', na.strings = '999')
names(problemsolving2level) <- c('school','student','condition','teachexp','eslpct','hispanic','male','frlunch',
'lowach','stanmath','efficacypre','efficacypst','psolvepre','psolvepst')
##################################################
# fcs imputation (ex15.imp)
##################################################
mymodel <- rblimp_fcs(
data = problemsolving2level,
clusterid = 'school',
ordinal = 'condition hispanic frlunch',
fixed = 'condition psolvepre',
variables = 'psolvepst psolvepre hispanic frlunch condition',
seed = 90291,
burn = 1000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
for (i in 1:length(implist)) {
implist[[i]] <- gmc(implist[[i]], c('psolvepre','hispanic','frlunch'), by = c('school'), FUN = mean, suffix = c('.meanj', '.cwc'), fulldataframe = TRUE)
}
# analysis and pooling
fit <- with(implist, lmer(psolvepst ~ psolvepre.cwc + hispanic.cwc + frlunch.cwc + psolvepre.meanj + hispanic.meanj + frlunch.meanj + condition + (1 | school), REML = T))
# significance tests
estimates <- testEstimates(fit, extra.pars = T)
estimates
for (i in 1:length(implist)) {
implist[[i]] <- gmc(implist[[i]], x = c('psolvepre','hispanic','frlunch'), by = c('school'), FUN = mean, suffix = c('.meanj', '.cwc'), fulldataframe = TRUE)
}
for (i in 1:length(implist)) {
implist[[i]] <- gmc(implist[[i]], c('psolvepre','hispanic','frlunch'), by = c('school'), FUN = mean, suffix = c('.meanj', '.cwc'), fulldataframe = TRUE)
}
# FCS Imputation for Random Intercept Regression
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving2level <- read.table('problemsolving2level.dat', na.strings = '999')
names(problemsolving2level) <- c('school','student','condition','teachexp','eslpct','hispanic','male','frlunch',
'lowach','stanmath','efficacypre','efficacypst','psolvepre','psolvepst')
##################################################
# fcs imputation (ex15.imp)
##################################################
mymodel <- rblimp_fcs(
data = problemsolving2level,
clusterid = 'school',
ordinal = 'condition hispanic frlunch',
fixed = 'condition psolvepre',
variables = 'psolvepst psolvepre hispanic frlunch condition',
seed = 90291,
burn = 1000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
##################################################
# analysis and pooling
##################################################
# within-cluster (group mean) center level-1 predictors and add cluster-specific group means to the data
for (i in 1:length(implist)) {
implist[[i]] <- gmc(implist[[i]], x = c('psolvepre','hispanic','frlunch'), by = c('school'), FUN = mean, suffix = c('.meanj', '.cwc'), fulldataframe = TRUE)
}
# analysis and pooling
fit <- with(implist, lmer(psolvepst ~ psolvepre.cwc + hispanic.cwc + frlunch.cwc + psolvepre.meanj + hispanic.meanj + frlunch.meanj + condition + (1 | school), REML = T))
# significance tests
estimates <- testEstimates(fit, extra.pars = T)
estimates
# FCS Imputation for Random Intercept Regression
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving2level <- read.table('problemsolving2level.dat', na.strings = '999')
names(problemsolving2level) <- c('school','student','condition','teachexp','eslpct','hispanic','male','frlunch',
'lowach','stanmath','efficacypre','efficacypst','psolvepre','psolvepst')
##################################################
# fit model with mcmc (ex16.1.imp)
##################################################
mymodel <- rblimp(
data = problemsolving2level,
clusterid = 'school',
ordinal = 'condition hispanic frlunch',
fixed = 'condition psolvepre',
center = 'groupmean = psolvepre hispanic frlunch; grandmean = psolvepre.mean hispanic.mean frlunch.mean',
model = 'psolvepst ~ psolvepre hispanic frlunch psolvepre.mean hispanic.mean frlunch.mean condition',
seed = 90291,
burn = 5000,
iter = 10000)
mymodel@output
##################################################
# fit model and save imputations (ex16.2.imp)
##################################################
mymodel <- rblimp(
data = problemsolving2level,
clusterid = 'school',
ordinal = 'condition hispanic frlunch',
fixed = 'condition psolvepre',
center = 'groupmean = psolvepre hispanic frlunch; grandmean = psolvepre.mean hispanic.mean frlunch.mean',
model = 'psolvepst ~ psolvepre hispanic frlunch psolvepre.mean hispanic.mean frlunch.mean condition',
seed = 90291,
burn = 5000,
iter = 10000,
nimps = 20,
chains = 20)
mymodel@output
# mitml list
implist <- as.mitml(mymodel)
# within-cluster (group mean) center level-1 predictors and add cluster-specific group means to the data
for (i in 1:length(implist)) {
implist[[i]] <- gmc(implist[[i]], x = c('psolvepre','hispanic','frlunch'), by = c('school'), FUN = mean, suffix = c('.meanj', '.cwc'), fulldataframe = TRUE)
}
# analysis and pooling
fit <- with(implist, lmer(psolvepst ~ psolvepre.cwc + hispanic.cwc + frlunch.cwc + psolvepre.meanj + hispanic.meanj + frlunch.meanj + condition + (1 | school), REML = T))
# significance tests
estimates <- testEstimates(fit, extra.pars = T)
estimates
confint(estimates)
##################################################
# wald and likelihood ratio (omnibus) tests
##################################################
# wald test that all slopes = 0
nullanalysis <- with(implist, lmer(psolvepst ~ 1 + (1 | school)))
testModels(fit, nullanalysis, method = 'D1')
# MCMC Two-Level Moderated Regression With Random Slopes
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving2level <- read.table('problemsolving2level.dat', na.strings = '999')
# MCMC Two-Level Moderated Regression With Random Slopes
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving2level <- read.table('problemsolving2level.dat', na.strings = '999')
# MCMC Two-Level Moderated Regression With Random Slopes
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving3level <- read.table('problemsolving3level.dat', na.strings = '999')
# read imputed data from working directory
problemsolving3level <- read.table('problemsolving3level.dat', na.strings = '999')
# MCMC Two-Level Moderated Regression With Random Slopes
library(fdir)
library(rblimp)
library(rockchalk)
library(lme4)
library(mitml)
##################################################
# read data
##################################################
# set working directory
set()
# read imputed data from working directory
problemsolving3level <- read.table('problemsolving3level.dat', na.strings = '999')
# read imputed data from working directory
problemsolving3level <- read.table('problemsolving3level.dat', na.strings = '999')
# read imputed data from working directory
problemsolving3level <- read.table('problemsolving3level.dat', na.strings = '999')
